{"ast":null,"code":"const calculateScore = (rowNumbers, rowNum) => {\n  // Create an object to store the occurrences of each item\n  console.log(rowNum);\n  const occurrences = {};\n\n  // Iterate through the array to count occurrences\n  rowNumbers.forEach(item => {\n    occurrences[item] = (occurrences[item] || 0) + 1;\n  });\n  // Calculate the final values based on occurrences\n  const resultArr = rowNumbers.map(item => {\n    if (occurrences[item] === 2) {\n      return item * 2; // Double the value for items that appear twice\n    } else if (occurrences[item] === 3) {\n      return item * 3; // Triple the value for items that appear three times\n    } else {\n      return item; // Keep the original value for other items\n    }\n  });\n  const result = resultArr.reduce((a, b) => a + b, 0);\n  return result;\n};\nexport default calculateScore;","map":{"version":3,"names":["calculateScore","rowNumbers","rowNum","console","log","occurrences","forEach","item","resultArr","map","result","reduce","a","b"],"sources":["C:/Users/dexte/OneDrive/Documents/Github/dice-game-final(1/src/RowCalc.js"],"sourcesContent":["const calculateScore = (rowNumbers, rowNum) => {\r\n  // Create an object to store the occurrences of each item\r\n  console.log(rowNum);\r\n  const occurrences = {};\r\n\r\n  // Iterate through the array to count occurrences\r\n  rowNumbers.forEach((item) => {\r\n    occurrences[item] = (occurrences[item] || 0) + 1;\r\n  });\r\n  // Calculate the final values based on occurrences\r\n  const resultArr = rowNumbers.map((item) => {\r\n    if (occurrences[item] === 2) {\r\n      return item * 2; // Double the value for items that appear twice\r\n    } else if (occurrences[item] === 3) {\r\n      return item * 3; // Triple the value for items that appear three times\r\n    } else {\r\n      return item; // Keep the original value for other items\r\n    }\r\n  });\r\n  const result = resultArr.reduce((a, b) => a + b, 0);\r\n  return result;\r\n};\r\n\r\nexport default calculateScore;\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;EAC7C;EACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAMG,WAAW,GAAG,CAAC,CAAC;;EAEtB;EACAJ,UAAU,CAACK,OAAO,CAAEC,IAAI,IAAK;IAC3BF,WAAW,CAACE,IAAI,CAAC,GAAG,CAACF,WAAW,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;EAClD,CAAC,CAAC;EACF;EACA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,GAAG,CAAEF,IAAI,IAAK;IACzC,IAAIF,WAAW,CAACE,IAAI,CAAC,KAAK,CAAC,EAAE;MAC3B,OAAOA,IAAI,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM,IAAIF,WAAW,CAACE,IAAI,CAAC,KAAK,CAAC,EAAE;MAClC,OAAOA,IAAI,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,OAAOA,IAAI,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EACF,MAAMG,MAAM,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;EACnD,OAAOH,MAAM;AACf,CAAC;AAED,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}